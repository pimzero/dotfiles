function mkmod() {
  DEFAULT_NAME=''
  DEFAULT_LICENCE=1
  DEFAULT_AUTHOR='Surname Name'
  DEFAULT_MAIL='surname.name@mail.com'
  DEFAULT_VERSION='1.0'
  DEFAULT_DESCRIPTION=''

  LICENCES=$(cat <<-EOM
		GPL
		GPL v2
		GPL and additional rights
		Dual BSD/GPL
		Dual MIT/GPL
		Dual MPL/GPL
		Private
EOM
)

  echo -n "Module name [$DEFAULT_NAME]: "
  read NAME
  NAME="${NAME:-$DEFAULT_NAME}"
  if [ -z $(echo -n "$NAME" | grep -E '^[a-zA-Z][0-9a-zA-Z_]*$') ]; then
    echo "Invalid version '$VERSION'" >&2
    return 1
  fi

  echo "Licence [$DEFAULT_LICENCE]: "
  echo -e "$LICENCES" | cat -n
  read LICENCE
  LICENCE="${LICENCE:-$DEFAULT_LICENCE}"
  LICENCE=$(echo -e "$LICENCES" | cat -n | sed 's/^\s*//g; s/\s.*$//g' | grep "$LICENCE")
  LICENCE="${LICENCE:-$DEFAULT_LICENCE}"
  LICENCE=$(echo -e "$LICENCES" | head -n$LICENCE | tail -n1)


  echo -n "Author's name [$DEFAULT_AUTHOR]: "
  read AUTHOR_NAME
  AUTHOR_NAME="${AUTHOR_NAME:-$DEFAULT_AUTHOR}"

  echo -n "Author's mail [$DEFAULT_MAIL]: "
  read AUTHOR_MAIL
  AUTHOR_MAIL="${AUTHOR_MAIL:-$DEFAULT_MAIL}"

  DEFAULT_AUTHOR="$AUTHOR_NAME <$AUTHOR_MAIL>"
  echo -n "Author [$DEFAULT_AUTHOR]: "
  read AUTHOR
  AUTHOR="${AUTHOR:-$DEFAULT_AUTHOR}"
  # TODO: Sanitize AUTHOR ('\' and '"' (amongst others))

  echo -n "Module version [$DEFAULT_VERSION]: "
  read VERSION
  VERSION="${VERSION:-$DEFAULT_VERSION}"

  if [ -z $(echo -n "$VERSION" | grep -E '^([0-9]+:)?[0-9a-zA-Z.]+(-[0-9a-zA-Z.]+)?$') ]; then
    echo "Invalid version '$VERSION'" >&2
    return 1
  fi

  echo "Module description [$DEFAULT_DESCRIPTION]: "
  DESCRIPTION="$(cat - | sed 's/\\/\\\\/g; s/"/\\"/g; s/^/"/g; s/$/\\n"/g')"



	mkdir "$NAME"
	if [ $? -ne 0 ]; then
		echo "Couldn't make directory '$NAME'" >&2
		return 1
	fi

(cat <<EOM
#include <linux/module.h>
#include <linux/kernel.h>

static int __init mod_init(void)
{
	return 0;
}

static void __exit mod_exit(void)
{
}

module_init(mod_init);
module_exit(mod_exit);

MODULE_AUTHOR("$AUTHOR");
MODULE_DESCRIPTION($DESCRIPTION);
MODULE_LICENSE("$LICENCE");
MODULE_VERSION("$VERSION");
EOM
) >"$NAME/$NAME.c"
	if [ $? -ne 0 ]; then
		echo "Couldn't make file '$NAME/$NAME.c'" >&2
		return 1
	fi

(cat <<EOM
obj-m += $NAME.o
KDIR ?= "/lib/modules/\$(shell uname -r)/build"

all:
	make -C \$(KDIR) M=\$(PWD) modules

clean:
	make -C \$(KDIR) M=\$(PWD) clean

install:
	make -C \$(KDIR) M=\$(PWD) modules_install
EOM
) >"$NAME/Makefile"
	if [ $? -ne 0 ]; then
		echo "Couldn't make file '$NAME/Makefile'" >&2
		return 1
	fi
}
